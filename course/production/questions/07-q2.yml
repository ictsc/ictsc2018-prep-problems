type: HumanGradedTextQuestion
id: 07_q2
value: 10
widget: textarea
prompt: |

    ### Packet filtering問題 No.2

    <br/>
    ここにGoで書かれたコードがあります。このプログラムはIPv4のIPアドレスをキーにして通信を破棄することができます。<br/>
    このコードを参考に、後述する問いに答えてください。<br/>
    <br/>
    ``` go
    package main

    import (
        "fmt"
        "os"

        "github.com/AkihiroSuda/go-netfilter-queue"
        "github.com/google/gopacket/layers"
    )

    const NFQUEUE_NUM_ID = 10
    const MAX_PACKET_IN_QUEUE = 300

    const EXCLUDE_IN_IP = "192.168.0.2"
    const EXCLUDE_IN_Port = <1>

    func isSelectedExcludeInIP(packet *netfilter.NFPacket, target string) {
        if target == EXCLUDE_IN_IP {
            packet.SetVerdict(netfilter.NF_DROP)
            fmt.Println("Drop is IP")
        }
    }
    func isSelectedExcludeInPort(packet *netfilter.NFPacket, target string) {
        if target == EXCLUDE_IN_Port {
            packet.SetVerdict(netfilter.NF_DROP)
            fmt.Println("Drop is Port")
        }
    }
    func isSelecteExcludedInMACAddr(packet *netfilter.NFPacket, target string) {
          if target == EXCLUDE_IN_MACAddr {
              packet.SetVerdict(netfilter.NF_DROP)
              fmt.Println("Drop is MACAddress")
          }
    }

    
    func main() {
        var err error

        nfq, err := netfilter.NewNFQueue(NFQUEUE_NUM_ID, MAX_PACKET_IN_QUEUE, netfilter.NF_DEFAULT_PACKET_SIZE)
        if err != nil {
            fmt.Println(err)
            os.Exit(1)
        }
        defer nfq.Close()
        packets := nfq.GetPackets()
        for true {
            select {
            case packet := <-packets:
                ethernetLayer := packet.Packet.Layer(layers.LayerTypeEthernet)
                ipLayer := packet.Packet.Layer(layers.LayerTypeIPv4)
                tcpLayer := packet.Packet.Layer(layers.LayerTypeTCP)
                if ipLayer != nil {
                    ip, _ := ipLayer.(*layers.IPv4)
                    isSelectedExcludeInIP(&packet, ip.SrcIP.String())
                } else if <2>{
                    tcp, _ := tcpLayer.(*layers.TCP)
                    <3>
                }else {
                    packet.SetVerdict(netfilter.NF_ACCEPT)
                }
            }
        }
    }
    ```
    <br/>

    このプログラムを用いてパケットを制御することができます。<br/>
    `go run ファイル名` でプログラムを起動し、パケットの制御を行なえるのですが、それに加えてiptablesでqueueの設定をしなくてはいけません。<br/>
    前述したコードを用いてIP通信を制御する際にはどのようなコマンドでqueueの設定をすればよいでしょうか。<br/>
    コマンドは`iptables~`から始めて記述してください。<br/>
    また，startだけではなく、stopの時も空行を挟んで同様に示してください。<br/>
    <br/><br/>

rubric: |
    採点基準

